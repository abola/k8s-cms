#
# k8s-cms
# Kubernetes Intergration
# CMS Evaluation Deployment
#

apiVersion:  apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-cms.fullname" . }}-evaluation
  labels:
{{ include "k8s-cms.labels" . | indent 4 }}
    component: evaluation
spec:
  replicas: 1
  selector:
    matchLabels:
{{ include "k8s-cms.selectors" . | indent 6 }}
      component: evaluation
  template:
    metadata:
      labels:
{{ include "k8s-cms.labels" . | indent 8 }}
        component: evaluation
      annotations:
{{ include "k8s-cms.annotations" . | indent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ .Values.security.serviceAccount.name }}
      containers:
        {{- with .Values.images.evaluation }}
        - name: {{ .name }}
          image: {{ .repository }}:{{ .tag }}
        {{- end }}
          ports:
            - name: cmseval
              containerPort: 25000
          envFrom:
            - configMapRef:
                name: {{ include "k8s-cms.fullname" . }}-config-env
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "k8s-cms.fullname" . }}-secrets
                  key: POSTGRES_PASSWORD
            # required to listen properly
            - name: CMS_EVALUATION
              value: "0.0.0.0"
          livenessProbe:
            tcpSocket:
              port: cmseval
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: cmseval
            periodSeconds: 3

          resources:
{{ toYaml .Values.resources.evaluation | indent 12 }}

          volumeMounts:
            - name: config-file
              mountPath: "/cms/config"
      volumes:
        - name: config-file
          configMap:
            name: {{ include "k8s-cms.fullname" . }}-config-file
