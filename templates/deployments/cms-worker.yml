#
# k8s-cms
# Kubernetes Intergration
# CMS Workers Deployment
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "k8s-cms.fullname" . }}-worker
  labels:
{{ include "k8s-cms.labels" . | indent 4 }}
    component: worker
spec:
  serviceName: {{ .Values.services.worker.name }}
  podManagementPolicy: Parallel
  replicas: {{ .Values.replicas.worker.minCount }}
  selector:
    matchLabels:
{{ include "k8s-cms.selectors" . | indent 6 }}
      component: worker
  template:
    metadata:
      labels:
{{ include "k8s-cms.labels" . | indent 8 }}
        component: worker
      annotations:
{{ include "k8s-cms.annotations" . | indent 8 }}
        checksum/{{ include "k8s-cms.fullname" . }}-config-worker-env: {{ include (print $.Template.BasePath "/config/config-worker-env.yml") . | sha256sum }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      tolerations:
        {{ toYaml .Values.tolerations.worker | nindent 8 }}
      serviceAccountName: {{ .Values.security.serviceAccount.name }}
      containers:
        {{- with .Values.images.worker }}
        - name: {{ .name }}
          securityContext:
            privileged: true
          image: {{ .repository }}:{{ .tag }}
        {{- end }}
          ports:
            - name: cmswork
              containerPort: 26000
          envFrom:
            - configMapRef:
                name: {{ include "k8s-cms.fullname" . }}-config-env
            - configMapRef:
                name: {{ include "k8s-cms.fullname" . }}-config-worker-env
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "k8s-cms.fullname" . }}-secrets
                  key: POSTGRES_PASSWORD
            # required for container to listen
            - name: CMS_RESOURCE
              value: "0.0.0.0"
            - name: CMS_WORKER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          livenessProbe:
            tcpSocket:
              port: cmswork
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: cmswork
            periodSeconds: 3

          resources:
{{ toYaml .Values.resources.worker | indent 12 }}

          volumeMounts:
            - name: config-file
              mountPath: "/cms/config"
      volumes:
        - name: config-file
          configMap:
            name: {{ include "k8s-cms.fullname" . }}-config-file
